import example.*

describe "Test de Kinesiologia - Parte 1" {
    const leonardo = new Paciente(
      edad=40,
      dolor=30,
      fortalezaMuscular=50
    )

    const milena = new Paciente(
      edad=3,
      dolor=30,
      fortalezaMuscular=50
    )

    const magneto1 = new Magneto()
    const bici1 = new Bici()
    const mini1 = new MiniTramp()

    method initialize() {
      leonardo.cargarRutina([bici1, mini1, magneto1])
      milena.cargarRutina([magneto1, bici1])
    }
  test "Leonardo puede usar los 3 aparatos" {
    assert.that(leonardo.puedeUsar(magneto1))
    assert.that(leonardo.puedeUsar(bici1))
    assert.that(leonardo.puedeUsar(mini1))
  }

  test "Después de usar el magneto una vez, el nivel de dolor de Leonardo baja a 9." {
    leonardo.usar(magneto1)
    assert.equals(9, leonardo.dolor())
  }

  test "Después de usar el magneto una vez, el nivel de dolor de Milena baja a 27." {
    
  }

  test "Leonardo puede hacer la rutina que tiene asignada" {
    assert.that(leonardo.puedeHacerRutina())
  }

  test "Leonardo hace la rutina asignada" {
    leonardo.realizaRutina()
    assert.equals(1.8, leonardo.dolor())
    assert.equals(30, leonardo.fortalezaMuscular())
  }

  test "Milena no puede hacer la rutina que tiene asignada" {
    assert.notThat(milena.puedeHacerRutina())
  }
}

describe "parte 3" {
    const leonardo = new Paciente(
      edad=40,
      dolor=30,
      fortalezaMuscular=50
    )

    const nicolas = new Resistente(
      edad=40,
      dolor=10,
      fortalezaMuscular=50,
      rutina=[]
    )

    const victoria = new Caprichoso(
      edad=30,
      dolor=10,
      fortalezaMuscular=40,
      rutina=[]
    )

    const julian = new Caprichoso(
      edad=20,
      dolor=54,
      fortalezaMuscular=50,
      rutina=[]
    )

    const zoe = new RecuperacionRapida(
      edad=50,
      dolor=14,
      fortalezaMuscular=40,
      rutina=[]
    )

    const magneto1 = new Magneto()
    const bici1 = new Bici()
    const mini1 = new MiniTramp()
    const magneto2 = new Magneto(color="verde")
    const bici2 = new Bici(color="rojo")

    method initialize() {
      leonardo.cargarRutina([bici1, mini1, magneto1])
      nicolas.cargarRutina([bici1, mini1, magneto1])
      victoria.cargarRutina([bici1, mini1, magneto1])
      julian.cargarRutina([bici2, bici1, magneto2])
      zoe.cargarRutina([bici1, mini1, magneto1])
    }
  test "Nicolás puede hacer la rutina que tiene asignada. Después de hacerla una vez, su nivel de dolor baja a 1.8, y su fortaleza sube a 34." {
    assert.that(nicolas.puedeHacerRutina())
    nicolas.realizarRutina()
    assert.equals(1.8, nicolas.dolor())
    assert.equals(34, nicolas.fortalezaMuscular())
  }

  test "Victoria no puede hacer la rutina que tiene asignada." {
    assert.notThat(victoria.puedeHacerRutina())
  }

  test "Julián puede hacer la rutina que tiene asignada. Después de hacerla una vez, su nivel de dolor baja a 29.3, y su fortaleza sube a 62." {
    assert.that(julian.puedeHacerRutina())
    julian.realizarRutina()
    assert.equals(29.3, julian.dolor())
    assert.equals(62, julian.fortalezaMuscular())
  }

  test "Zoe puede hacer la rutina que tiene asignada. Después de asignar a 2 el valor de decremento de dolor para pacientes de rápida recuperación, y de que Zoe haga su rutinauna vez, su nivel de dolor baja a 3.4, y su fortaleza sube a 51." {
    assert.that(zoe.puedeHacerRutina())
    
  }
}